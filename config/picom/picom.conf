# Picom configuration - matching your Hyprland visual style
# See: https://github.com/yshui/picom/blob/next/picom.sample.conf

#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows
shadow = true;

# The blur radius for shadows, in pixels
shadow-radius = 12;

# The opacity of shadows
shadow-opacity = 0.75;

# The left offset for shadows, in pixels
shadow-offset-x = -15;

# The top offset for shadows, in pixels
shadow-offset-y = -15;

# Shadow color
shadow-color = "#000000";

# Specify a list of conditions of windows that should have no shadow
shadow-exclude = [
    "name = 'Notification'",
    "class_g = 'Conky'",
    "class_g ?= 'Notify-osd'",
    "class_g = 'Cairo-clock'",
    "_GTK_FRAME_EXTENTS@:c"
];

#################################
#           Fading              #
#################################

# Fade windows in/out when opening/closing and when opacity changes
fading = true;

# Opacity change between steps while fading in
fade-in-step = 0.03;

# Opacity change between steps while fading out
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds
fade-delta = 10;

# Specify a list of conditions of windows that should not be faded
fade-exclude = [
    "class_g = 'slop'"   # maim
];

#################################
#   Transparency / Opacity      #
#################################

# Opacity of inactive windows (matching your Hyprland inactive_opacity = 0.8)
inactive-opacity = 0.8;

# Opacity of window titlebars and borders
frame-opacity = 0.7;

# Default opacity for dropdown menus and popup menus
menu-opacity = 0.8;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows
inactive-opacity-override = false;

# Default opacity for active windows (matching your Hyprland active_opacity = 0.9)
active-opacity = 0.9;

# Dim inactive windows
inactive-dim = 0.0;

# Specify a list of conditions of windows that should always be considered focused
focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Use fixed inactive dim value, instead of adjusting according to window opacity
inactive-dim-fixed = 1.0;

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`
opacity-rule = [
    "100:class_g = 'kitty' && focused",
    "90:class_g = 'kitty' && !focused",
    "100:class_g = 'firefox'",
    "95:class_g = 'Rofi'",
    "100:class_g = 'i3bar'",
    "90:class_g = 'code'"
];

#################################
#     Background-Blurring       #
#################################

# Parameters for background blurring - Optimized for high resolution (2880x1920@120Hz)
blur-method = "dual_kawase";
blur-size = 8;  # Reduced for better performance on high DPI
blur-deviation = false;
blur-strength = 4;  # Slightly reduced for performance

# Blur background of semi-transparent / ARGB windows
blur-background = true;

# Blur background of windows when the window frame is not opaque
blur-background-frame = false;

# Use fixed blur strength rather than adjusting according to window opacity
blur-background-fixed = false;

# Specify the blur convolution kernel
blur-kern = "3x3box";

# Exclude conditions for background blur
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

# Daemonize process. Fork to background after initialization
daemon = false;

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`
backend = "glx";

# Enable/disable VSync
vsync = true;

# Enable remote control via D-Bus
dbus = false;

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will
# try detecting this with X RandR extension
refresh-rate = 0;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event
use-ewmh-active-win = false;

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows
unredir-if-possible = false;

# Delay before unredirecting the window, in milliseconds
unredir-if-possible-delay = 0;

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen
unredir-if-possible-exclude = [];

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time
detect-client-leader = true;

# Resize damaged region by a specific number of pixels
resize-damage = 1;

# Specify a list of conditions of windows that should be painted with inverted color
invert-color-include = [];

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer
glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage
glx-no-rebind-pixmap = false;

# Disable the use of damage information
use-damage = true;

# Use X Sync fence to sync clients' draw calls, to make sure all draw
# calls are finished before picom starts drawing
xrender-sync-fence = false;

# GLX backend: Use specified GLSL fragment shader for rendering window contents
glx-fshader-win = "";

# Force all windows to be painted with blending
force-win-blend = false;

# Do not use EWMH to detect fullscreen windows
no-ewmh-fullscreen = false;

# Dimming bright windows so their brightness doesn't exceed this set value
max-brightness = 1.0;

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them
transparent-clipping = false;

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance
log-level = "warn";

# Set the log file
log-file = "/tmp/picom.log";

# Show all X errors (for debugging)
show-all-xerrors = false;

# Write process ID to a file
write-pid-path = "/tmp/picom.pid";

# Window type settings
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};

#################################
#          Animations           #
#################################

# Enable animations
animations = true;

# Animation settings
animation-stiffness = 300;
animation-dampening = 35;
animation-clamping = true;
animation-mass = 1;

# Animation for window open
animation-for-open-window = "slide-up";

# Animation for window close
animation-for-unmap-window = "slide-down";

# Animation for workspace change
animation-for-workspace-change-in = "slide-left";
animation-for-workspace-change-out = "slide-right";

# Corner radius - Scaled for high DPI display
corner-radius = 15;

# Exclude conditions for rounded corners
rounded-corners-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];